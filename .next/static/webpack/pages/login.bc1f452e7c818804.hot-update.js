"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "./pages/users.js":
/*!************************!*\
  !*** ./pages/users.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUser: function() { return /* binding */ addUser; },\n/* harmony export */   deleteUser: function() { return /* binding */ deleteUser; },\n/* harmony export */   getAllUsers: function() { return /* binding */ getAllUsers; },\n/* harmony export */   isAdmin: function() { return /* binding */ isAdmin; },\n/* harmony export */   validateLogin: function() { return /* binding */ validateLogin; }\n/* harmony export */ });\n// Simple user database - only allowed users can access\nlet allowedUsers = [\n    {\n        id: 1,\n        email: \"echankinson@gmail.com\",\n        password: \"eric\",\n        name: \"Eric Hankinson\",\n        role: \"admin\" // admin can add/remove users\n    },\n    {\n        id: 2,\n        email: \"test@test.com\",\n        password: \"eric\",\n        name: \"Test User\",\n        role: \"user\"\n    }\n];\n// Get next available ID\nfunction getNextId() {\n    return Math.max(...allowedUsers.map((u)=>u.id), 0) + 1;\n}\n// Function to check if login is valid\nfunction validateLogin(email, password) {\n    const user = allowedUsers.find((u)=>u.email.toLowerCase() === email.toLowerCase() && u.password === password);\n    if (user) {\n        return {\n            success: true,\n            user: {\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                role: user.role\n            }\n        };\n    }\n    return {\n        success: false,\n        error: \"Invalid email or password\"\n    };\n}\n// Check if user has admin privileges\nfunction isAdmin(userEmail) {\n    const user = allowedUsers.find((u)=>u.email.toLowerCase() === userEmail.toLowerCase());\n    return user && user.role === \"admin\";\n}\n// Add a new user (admin only)\nfunction addUser(newUserData, adminEmail) {\n    try {\n        // Check if requester is admin\n        if (!isAdmin(adminEmail)) {\n            return {\n                success: false,\n                error: \"Only administrators can add new users\"\n            };\n        }\n        // Validate input\n        if (!newUserData.email || !newUserData.password || !newUserData.name) {\n            return {\n                success: false,\n                error: \"Email, password, and name are required\"\n            };\n        }\n        // Check if user already exists\n        const existingUser = allowedUsers.find((u)=>u.email.toLowerCase() === newUserData.email.toLowerCase());\n        if (existingUser) {\n            return {\n                success: false,\n                error: \"User with this email already exists\"\n            };\n        }\n        // Add new user\n        const newUser = {\n            id: getNextId(),\n            email: newUserData.email.toLowerCase(),\n            password: newUserData.password,\n            name: newUserData.name,\n            role: newUserData.role || \"user\"\n        };\n        allowedUsers.push(newUser);\n        return {\n            success: true,\n            message: \"User \".concat(newUser.name, \" added successfully\"),\n            user: {\n                id: newUser.id,\n                email: newUser.email,\n                name: newUser.name,\n                role: newUser.role\n            }\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: \"Failed to add user: \" + error.message\n        };\n    }\n}\n// Get all users (admin only)\nfunction getAllUsers(adminEmail) {\n    if (!isAdmin(adminEmail)) {\n        return {\n            success: false,\n            error: \"Only administrators can view all users\"\n        };\n    }\n    return {\n        success: true,\n        users: allowedUsers.map((user)=>({\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                role: user.role\n            }))\n    };\n}\n// Delete a user (admin only)\nfunction deleteUser(userId, adminEmail) {\n    try {\n        // Check if requester is admin\n        if (!isAdmin(adminEmail)) {\n            return {\n                success: false,\n                error: \"Only administrators can delete users\"\n            };\n        }\n        // Find user to delete\n        const userIndex = allowedUsers.findIndex((u)=>u.id === userId);\n        if (userIndex === -1) {\n            return {\n                success: false,\n                error: \"User not found\"\n            };\n        }\n        // Don't allow deleting yourself\n        const userToDelete = allowedUsers[userIndex];\n        if (userToDelete.email.toLowerCase() === adminEmail.toLowerCase()) {\n            return {\n                success: false,\n                error: \"You cannot delete your own account\"\n            };\n        }\n        // Remove user\n        allowedUsers.splice(userIndex, 1);\n        return {\n            success: true,\n            message: \"User \".concat(userToDelete.name, \" deleted successfully\")\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: \"Failed to delete user: \" + error.message\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/users.js\n"));

/***/ })

});